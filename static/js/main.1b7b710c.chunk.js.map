{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup .js","components/DeleteCardPopup.js","components/ProtectedRoute.js","components/PageWithLogin.js","components/Login.js","components/Register.js","utils/Auth.js","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","location","useLocation","islocationSignIn","pathname","islocationBasic","React","useState","isMenu","setMenu","className","src","logo","alt","type","onClick","islogOn","isLoading","userEmail","activeClassName","to","onSignOut","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","slice","reverse","map","Footer","ImagePopup","onClose","api","baseUrl","headers","handleResponse","res","ok","json","Promise","reject","status","this","_baseUrl","_headers","fetch","credentials","then","data","method","body","JSON","stringify","cardId","likeStatus","PopupWithForm","isOpen","onSubmit","title","children","button","buttonSubmitText","EditProfilePopup","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","id","required","minLength","maxLength","autoComplete","placeholder","value","onChange","target","EditAvatarPopup","refAvatar","useRef","current","onUpdateAvatar","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","DeleteCardPopup","onSubmitDeleteCard","ProtectedRoute","Component","component","PageWithLogin","isLocationSignUp","values","setValues","handleChange","email","password","noValidate","htmlFor","buttonText","Login","onSubmitLogin","Register","onSubmitRegister","BASE_URL","InfoTooltip","isLuck","App","isEditAvatarPopupOpen","onEditAvatarPopupOpen","isEditProfilePopupOpen","onEditProfilePopupOpen","isAddPlacePopupOpen","onAddPlacePopupOpen","isDeleteCardPopup","onDeleteCardPopup","isInfoTooltipPopup","onInfoTooltipPopup","isLuckInfoTooltip","setLuckInfoTooltip","setlogOn","setIsLoading","history","useHistory","selectedCard","setSelectedCard","setCurrentUser","setUserEmail","userPassword","setUserPassword","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","closeAllPopups","closeInfoTooltipPopup","handleIsLogin","handleIsToken","localStorage","getItem","response","push","catch","login","jwt","setItem","a","handleOverlayClick","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","all","getUser","getInitialCards","userData","err","console","log","Provider","removeItem","exact","path","changeCardLikeStatus","newCard","state","c","register","user","setUser","finally","cardNew","addCard","setUserAvatar","removeCard","newCards","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b7b710c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../images/logo.svg';\r\nimport React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n    const location = useLocation();\r\n    const islocationSignIn = location.pathname === \"/sign-in\";\r\n    const islocationBasic = location.pathname === \"/\";\r\n    const [isMenu, setMenu] = React.useState(false);\r\n\r\n    function handleSignOut() {\r\n        props.onSignOut();\r\n        setMenu(false);\r\n    }\r\n\r\n    function handleSignIn() {\r\n        \r\n    }\r\n\r\n    function handleMenu () {\r\n        setMenu(true);\r\n    }\r\n\r\n    function handleMenuClose() {\r\n        setMenu(false);\r\n    }\r\n\r\n    return (\r\n        <header className={`header ${!isMenu ? \"header__block\" : \"\"} ${isMenu ? \"header__column\" : \"\" }`}>\r\n\r\n            <div className={`header__container ${isMenu ? \"header__container_column\" : \"\" } `}>\r\n                <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\r\n                <button type=\"button\" aria-label=\"Закрыть меню\" onClick={handleMenuClose} className={`popup__close popup__close_form popup__close_menu ${isMenu ? \"popup__close_active\" : \"\" }`}></button>\r\n            </div>\r\n\r\n            <div className={`header__burger-menu ${(!props.islogOn || isMenu) ? \"header__burger-menu_inactive\" : \"\"}`} onClick={handleMenu}>\r\n                <div className=\"header__burger-item\"></div>\r\n                <div className=\"header__burger-item\"></div>\r\n                <div className=\"header__burger-item\"></div>\r\n            </div>\r\n\r\n            { (!props.isLoading || islocationBasic) &&\r\n                <nav className={`header__nav-menu ${props.islogOn && !isMenu ? \"header__nav-menu_inactive\" : \"\"} ${isMenu ? \"header__nav-menu_column\" : \"\"} `}>\r\n                    <p className=\"header__email\">{props.islogOn ? props.userEmail : \"\" }</p>\r\n                    {!islocationSignIn ?\r\n                    <NavLink onClick={!props.islogOn ? handleSignIn : handleSignOut} className={`header__nav-item ${islocationBasic ? \"header__nav-item_active\" : \"header__nav-item_mob\"}`} to={\"/sign-in\"}>{props.islogOn ? \"Выйти\" : \"Войти\"}</NavLink>\r\n                    :\r\n                    <NavLink className=\"header__nav-item header__nav-item_mob\" activeClassName=\"header_nav-item_active\" to={\"/sign-up\"}>{!props.islogOn ? \"Регистрация\" : \"\"}</NavLink>\r\n                    }\r\n                </nav>\r\n            }\r\n\r\n\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n    \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = card.owner === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = `element__remove ${isOwn ? 'element__remove_visible' : 'element__remove_hidden'}`;\r\n    \r\n    const isLiked = card.likes.some(like => like === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `element__emotion ${isLiked ? 'element__emotion_active' : 'element__emotion'}`;\r\n\r\n    function handleLike() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    return (\r\n\r\n        <li className=\"element\">\r\n        \r\n            <img \r\n                src={card.link}\r\n                alt={card.name}\r\n                className=\"element__image\"\r\n                onClick={handleClick}\r\n            />\r\n            \r\n            <button\r\n                type=\"button\" aria-label=\"удалить карточку\"\r\n                className={cardDeleteButtonClassName}\r\n                onClick={handleDeleteClick}\r\n            ></button>\r\n\r\n            <div className=\"element__description\">\r\n                <h2 className=\"element__title\">{card.name}</h2>\r\n                <div className=\"element__rate\">\r\n                    <button\r\n                        type=\"button\" aria-label=\"оценить фото\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLike}\r\n                    ></button>\r\n                    <h3 className=\"element__number\">{card.likes.length}</h3>\r\n                </div>\r\n                \r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, onCardLike, onCardDelete, cards}) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__edit-avatar\">\r\n                    <img src={`${currentUser.avatar}`} alt=\"автарка пользователя\" className=\"profile__avatar\"/>\r\n                    <button type=\"button\" aria-label=\"открыть поле добавления аватарки\" onClick={onEditAvatar} className=\"profile__avatar-button\"></button>\r\n                </div>\r\n                \r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__edit\">\r\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                    </div>\r\n                    \r\n                    <button type=\"button\" aria-label=\"открыть попап\" className=\"profile__edit-button\" onClick={onEditProfile}></button> \r\n                </div>\r\n                <button type=\"button\" aria-label=\"открыть поле добавления фото\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n            </section>  \r\n\r\n\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__table\">\r\n                    {cards.slice(0).reverse().map((card) => (\r\n                        \r\n                            <Card\r\n                                key={card._id}\r\n                                card={card}\r\n                                onCardClick={onCardClick}\r\n                                onCardLike={onCardLike}\r\n                                onCardDelete={onCardDelete}\r\n                            />\r\n                        )\r\n                    )}\r\n\r\n              \r\n                </ul>\r\n\r\n            </section>\r\n      \r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n    \r\n    return (\r\n        <div className={`popup popup_images ${card.link ? \"popup_opened\" : \"\" }`}>\r\n\r\n            <div className=\"popup__content popup__content_image\">\r\n                <button type=\"button\" aria-label=\"закрыть попап\" className=\"popup__close popup__close_image\" onClick={onClose}></button>\r\n                <figure>\r\n                    <img src={card.link} alt={card.name} className=\"popup__image\"/>\r\n                    <figcaption className=\"popup__title\">{card.name}</figcaption>\r\n                </figure>\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","class Api{\r\n    constructor({baseUrl, headers}){\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    // возврат ответа сервера об ошибке\r\n    handleResponse = (res) => {\r\n        if(res.ok){\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    } \r\n\r\n    // запрос о получении информации о пользователе\r\n    getUser() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n        })\r\n        .then(this.handleResponse)\r\n \r\n    }\r\n    // сохранение данных пользователя\r\n    setUser(data) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: `${data.name}`,\r\n                about: `${data.about}`,\r\n            })\r\n        })\r\n        .then(this.handleResponse)\r\n\r\n    }\r\n    \r\n    // отправка нового аватара\r\n    setUserAvatar(data) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar,\r\n            })\r\n        })\r\n        .then(this.handleResponse)\r\n    }\r\n\r\n    // запрос на получение карточек\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n    // сохранение карточек\r\n    addCard(data){\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n          method:'POST',\r\n          credentials: 'include',\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n            name: `${data.name}`,\r\n            link: `${data.link}`,\r\n          })\r\n        })\r\n        .then(this.handleResponse)\r\n\r\n    }\r\n\r\n    // удаление карточек\r\n    removeCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n    // запрос поставить и удалить лайк с карточки\r\n    changeCardLikeStatus(cardId, likeStatus) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n            method: (likeStatus ? 'PUT' : 'DELETE'),\r\n            credentials: 'include',\r\n            headers: this._headers,\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n\r\n}\r\n\r\nconst apiConfigg = {\r\n    baseUrl: 'https://api.lina.front.nomoredomains.work',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n}\r\n\r\n// отправка запросов\r\nconst api = new Api(apiConfigg);\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (     \r\n\r\n        <div className={`popup ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <div className={`popup__content popup__content_${props.name}`}>\r\n                <button type=\"button\" aria-label=\"закрыть попап\" className={`popup__close popup__close_form popup__close_${props.name}`} onClick={props.onClose}></button>\r\n                <form name={`${props.name}`} className={`form form_${props.name}`} onSubmit={props.onSubmit}>\r\n                    <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n                    {props.children}\r\n\r\n                    <fieldset className=\"form__handler\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className={`form__button form__button_${props.button}`}>{props.buttonSubmitText}\r\n                        </button>\r\n                    </fieldset>\r\n                </form>                \r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription ] = React.useState('');\r\n\r\n    function handleChangeName(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(evt) {\r\n        setDescription(evt.target.value);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"edit\"\r\n          title=\"Редактировать профиль\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_name\" \r\n                  id=\"firstname\"\r\n                  name=\"name\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"40\" \r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Имя\"\r\n                  value={name|| ''}\r\n                  onChange={handleChangeName}\r\n                  />\r\n              <span id=\"firstname-error\" className=\"error\"></span>\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_job\" \r\n                  id=\"jobname\"\r\n                  name=\"job\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"200\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"введите свою специальность\"\r\n                  value={description || ''}\r\n                  onChange={handleChangeDescription}\r\n                  />\r\n              <span id=\"jobname-error\" className=\"error\"></span>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    const refAvatar = React.useRef();\r\n\r\n\r\n    function handleSubmit(evt) {\r\n\r\n        evt.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: refAvatar.current.value,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n        refAvatar.current.value = '';\r\n    },[props.isOpen])\r\n \r\n\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"avatar\"\r\n          title=\"Обновить аватар\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n                \r\n                <input \r\n                    type=\"url\" \r\n                    className=\"form__item form__item_input_avatar\"\r\n                    id=\"avatar\" \r\n                    name=\"avatar\" \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на аватар\"\r\n                    ref={refAvatar}    \r\n                />\r\n                <span id=\"avatar-error\" className=\"error\"></span>\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [cardName, setCardName] = React.useState('');\r\n    const [cardLink, setCardLink] = React.useState('');\r\n\r\n    function handleChangeCardName(evt) {\r\n        setCardName(evt.target.value);\r\n    }\r\n\r\n    function handleChangeCardLink(evt) {\r\n        setCardLink(evt.target.value);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setCardName('');\r\n        setCardLink('');\r\n    }, [props.isOpen]);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        props.onAddPlace ({\r\n            name: cardName,\r\n            link: cardLink\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"edit\"\r\n          title=\"Новое место\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_title\"\r\n                  id=\"title\" \r\n                  name=\"name\" \r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"30\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Название\"\r\n                  value={cardName}\r\n                  onChange={handleChangeCardName}\r\n                />\r\n              <span id=\"title-error\" className=\"error\"></span> \r\n              <input \r\n                  type=\"url\" \r\n                  className=\"form__item form__item_input_link\"\r\n                  id=\"link\" \r\n                  name=\"link\" \r\n                  required\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Ссылка на картинку\"\r\n                  value={cardLink}\r\n                  onChange={handleChangeCardLink}\r\n                />\r\n              <span id=\"link-error\" className=\"error\"></span>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction DeleteCardPopup(props) {\r\n\r\n    function handleSubmit(evt){\r\n      evt.preventDefault();\r\n      props.onSubmitDeleteCard(props.card)\r\n    }\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"remove\"\r\n          title=\"Вы уверены?\"\r\n          button=\"add-remove\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen = {props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n    return (\r\n      <Route>\r\n        {\r\n          () => props.islogOn ? <Component {...props} /> : <Redirect to=\"./login\" />\r\n        }\r\n      </Route>\r\n  )}\r\n  \r\n  export default ProtectedRoute;\r\n","import React from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction PageWithLogin(props) {\r\n\r\n    const location = useLocation();\r\n    const isLocationSignUp = location.pathname === \"/sign-up\";\r\n    const [ values, setValues ] = React.useState({});\r\n    \r\n    function handleChange(evt) {\r\n        const {name, value} = evt.target;\r\n        setValues({...values, [name]: value });\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit({email: values.email, password: values.password})\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"auth\">\r\n            <h2 className=\"auth__welcome\">\r\n                {props.title}\r\n            </h2>\r\n            <form \r\n                onSubmit={handleSubmit}\r\n                name={`${props.name}`} \r\n                className=\"auth__form\"\r\n                noValidate\r\n\r\n            >Email\r\n                <label htmlFor=\"email\" className=\"auth__label\">\r\n                    <input \r\n                    id=\"email\" \r\n                    name=\"email\" \r\n                    type=\"email\"\r\n                    value={values.email || \"\"}\r\n                    className=\"auth__input\"  \r\n                    placeholder=\"Email\"\r\n                    required\r\n                    minLength=\"2\"\r\n                    maxLength=\"30\"\r\n                    onChange={handleChange} \r\n                    />\r\n                </label>\r\n                \r\n                <label htmlFor=\"password\" className=\"auth__label\">\r\n                    <input \r\n                    id=\"password\" \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    className=\"auth__input\"\r\n                    placeholder=\"Пароль\"\r\n                    value={values.password || \"\"}\r\n                    required\r\n                    minLength=\"6\"\r\n                    maxLength=\"20\"\r\n                    onChange={handleChange} \r\n                    />\r\n                </label>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"auth__button\">\r\n                    {props.buttonText}\r\n                </button>\r\n            </form>\r\n\r\n            {isLocationSignUp && (\r\n                <div className=\"auth__signin\">\r\n                    <p className=\"auth__text\">Уже зарегистрированы? </p>\r\n                    <Link to={\"/sign-in\"} className=\"auth__login-link\">Войти</Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PageWithLogin;","import React from 'react';\r\nimport PageWithLogin from './PageWithLogin';\r\n\r\nfunction Login(props) {\r\n\r\n    return (\r\n\r\n        <>\r\n            {!props.isLoading && \r\n                <PageWithLogin\r\n                    title=\"Вход\"\r\n                    name=\"login\"\r\n                    buttonText=\"Войти\"\r\n                    onSubmit={props.onSubmitLogin}\r\n                />\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport PageWithLogin from './PageWithLogin';\r\n\r\nfunction Register(props) {\r\n    \r\n\r\n    return (\r\n\r\n        <PageWithLogin\r\n            title=\"Регистрация\"\r\n            name=\"register\"\r\n            buttonText=\"Зарегистрироваться\"\r\n            onSubmit={props.onSubmitRegister}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Register;","export const BASE_URL  = 'https://api.lina.front.nomoredomains.work';\r\n\r\n// возврат ответа сервера об ошибке\r\nconst handleResponse = (res) => {\r\n    if(res.ok){\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = ({email, password}) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          \"password\": password,\r\n          \"email\": email\r\n        }),\r\n    })\r\n    .then(response => handleResponse(response));\r\n}\r\n\r\nexport const login = ({email, password}) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Accept\": \"application/json\", \r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          \"password\": password,\r\n          \"email\": email\r\n        }),\r\n    })\r\n    .then(response => handleResponse(response));\r\n}\r\n\r\nexport const checkToken = () => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: \"GET\",\r\n      credentials: 'include',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then(response => handleResponse(response));\r\n}\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n    return (\r\n\r\n        <div className={`popup ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <div className=\"popup__content popup__content_info\">\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"закрыть попап\"\r\n                    className=\"popup__close popup__close_form popup__close_info\"\r\n                    onClick={props.onClose}>\r\n                </button>\r\n                <div className=\"info\">\r\n                    <div className={`popup__info-image ${!props.isLuck ? \"popup__info-image_type_error\" : \"\"}`}></div>\r\n                    <h2 className=\"info__title\">{!props.isLuck ? \"Что-то пошло не так! Попробуйте еще раз.\" : \"Вы успешно зарегистрировались!\" }</h2>   \r\n                </div>                \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport DeleteCardPopup from './DeleteCardPopup';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { register, login, checkToken } from '../utils/Auth';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\r\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\r\n  const [isInfoTooltipPopup, onInfoTooltipPopup] = React.useState(false);\r\n  const [isLuckInfoTooltip, setLuckInfoTooltip] = React.useState(null);\r\n  const [islogOn, setlogOn] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const history = useHistory();\r\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [userEmail, setUserEmail] = React.useState(\"\");\r\n  const [userPassword, setUserPassword] = React.useState(\"\");\r\n  const [cards, setCards] = React.useState([]);\r\n  const [cardDelete, setCardDelete] = React.useState({});\r\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\r\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\r\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\r\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да');\r\n\r\n  function handleEditAvatarClick() {\r\n    onEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    onEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    onAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleCardDeleteClick(card) {\r\n    onDeleteCardPopup(true);\r\n    setCardDelete(card); \r\n  }\r\n\r\n  function closeAllPopups() {\r\n    onEditAvatarPopupOpen(false);\r\n    onEditProfilePopupOpen(false);\r\n    onAddPlacePopupOpen(false);\r\n    onDeleteCardPopup(false);\r\n    onInfoTooltipPopup(false);\r\n    setSelectedCard({link: '', name: ''});\r\n    setCardDelete({link: '',  name: ''});\r\n  }\r\n\r\n  function closeInfoTooltipPopup() {\r\n    closeAllPopups();\r\n    if (isLuckInfoTooltip) {\r\n      handleIsLogin({email: userEmail, password: userPassword});\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    function handleOverlayClick(evt) {\r\n      if (evt.target.classList.contains('popup')) {\r\n        if (isLuckInfoTooltip) {\r\n          closeInfoTooltipPopup();\r\n        } else {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n    }\r\n    document.addEventListener('mousedown', handleOverlayClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOverlayClick);\r\n    }\r\n\r\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [\r\n    isLuckInfoTooltip,\r\n    isEditAvatarPopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isAddPlacePopupOpen,\r\n    selectedCard\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    function handleEscapeClick(evt) {\r\n      if (evt.key ==='Escape') {\r\n        if (isLuckInfoTooltip) {\r\n          closeInfoTooltipPopup();\r\n        } else {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n    }\r\n    document.addEventListener('keyup', handleEscapeClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', handleEscapeClick);\r\n    }\r\n\r\n  }, // eslint-disable-next-line\r\n    [\r\n    isLuckInfoTooltip,\r\n    isEditAvatarPopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isAddPlacePopupOpen,\r\n    selectedCard\r\n  ]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(false);\r\n    handleIsToken();\r\n    setLuckInfoTooltip(false);\r\n  }, // eslint-disable-next-line\r\n   [])\r\n\r\n  function handleIsToken() {\r\n\r\n    setIsLoading(false);\r\n    let jwt = localStorage.getItem(\"jwt\");\r\n    if (islogOn !== null) {\r\n      checkToken(jwt)\r\n        .then((res) => {\r\n          setUserEmail(res.email);\r\n          setlogOn(true);\r\n          setIsLoading(true);\r\n          history.push(\"/\");\r\n        })\r\n        .catch(() => {\r\n          setLuckInfoTooltip(false);\r\n          onInfoTooltipPopup(true);\r\n        })\r\n    } else {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleIsRegister(data) {\r\n    register(data)\r\n      .then((res) => {\r\n        setUserEmail(res.email);\r\n        setUserPassword(data.password);\r\n        setLuckInfoTooltip(true);\r\n        onInfoTooltipPopup(true);\r\n      })\r\n      .catch(() => {\r\n        setLuckInfoTooltip(false);\r\n        onInfoTooltipPopup(true);\r\n      })\r\n  }\r\n\r\n  function handleIsLogin(data) {\r\n    login(data)\r\n      .then((res) => {\r\n        if (res.jwt) {\r\n          localStorage.setItem(\"jwt\", res.jwt);\r\n          setlogOn(true);\r\n          handleIsToken();\r\n          history.push('/');\r\n        }\r\n        \r\n      })\r\n      .catch(async  () => {\r\n        setLuckInfoTooltip(false);\r\n        onInfoTooltipPopup(true);\r\n      })\r\n  }\r\n\r\n  function handleSignOut() {\r\n    setlogOn(null);\r\n    history.push(\"/sign-in\");\r\n    localStorage.removeItem(\"jwt\");\r\n    setUserEmail(\"\");\r\n    setUserPassword(\"\");\r\n    setLuckInfoTooltip(null);\r\n    setIsLoading(false);\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    if (islogOn !== null) {\r\n      Promise.all([api.getUser(localStorage.getItem(\"jwt\")), api.getInitialCards(localStorage.getItem(\"jwt\"))])\r\n        .then(([userData, cards]) => {\r\n          setCurrentUser(userData);\r\n          setCards(cards)\r\n        })\r\n        .catch(async (err) => {\r\n          console.log(err);\r\n        })\r\n    }\r\n  }, // eslint-disable-next-line\r\n   [islogOn])\r\n\r\n  function handleCardLike(card) {\r\n      \r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n      \r\n    api.changeCardLikeStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      })\r\n      .catch((err) => {\r\n          console.log(err);\r\n      })\r\n  }\r\n    \r\n  function handleCardDelete(card) {\r\n    setRemovePopupButtonText('Удаление...');\r\n    setIsLoading(true);\r\n    api.removeCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((evt) => evt._id !== card._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setRemovePopupButtonText('Да');\r\n      })\r\n  }\r\n\r\n  function handleUpdateUser(user) {\r\n    setProfilePopupButtonText('Сохранение...');\r\n    setUserEmail(true);\r\n    api.setUser(user)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setProfilePopupButtonText('Сохранить');\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    setAvatarPopupButtonText('Сохранение...');\r\n    setUserEmail(true);\r\n    api.setUserAvatar(avatar)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setAvatarPopupButtonText('Сохранить');\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardNew) {\r\n    setPlacePopupButtonText('Добавление...');\r\n    setUserEmail(true);\r\n    api.addCard(cardNew)\r\n      .then((cardNew) => {\r\n        setCards([cardNew, ...cards]);\r\n        closeAllPopups();\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setPlacePopupButtonText('Создать');\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n     \r\n     <CurrentUserContext.Provider value={currentUser}>\r\n\r\n        <Header\r\n          islogOn={islogOn}\r\n          userEmail={userEmail}\r\n          onSignOut={handleSignOut}\r\n          isLoading={isLoading}\r\n        />\r\n\r\n        <Switch>\r\n\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/\"\r\n            component={Main}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDeleteClick}\r\n            cards={cards}\r\n            islogOn={islogOn}\r\n          />\r\n\r\n          <Route path=\"/sign-up\">\r\n            <Register\r\n              onSubmitRegister={handleIsRegister}\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"/sign-in\">\r\n            <Login\r\n              onSubmitLogin={handleIsLogin}\r\n              isLoading={isLoading}\r\n            />\r\n          </Route>\r\n\r\n          <Route>\r\n            <Redirect to={!islogOn ? \"/sign-in\" : \"/\"} />\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n        <Footer/>\r\n\r\n        <EditProfilePopup \r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          buttonSubmitText={profilePopupButtonText}\r\n        /> \r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          buttonSubmitText={placePopupButtonText}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          buttonSubmitText={avatarPopupButtonText}\r\n        />\r\n\r\n        <DeleteCardPopup\r\n          isOpen={isDeleteCardPopup}\r\n          onClose={closeAllPopups}\r\n          onSubmitDeleteCard={handleCardDelete}\r\n          card={cardDelete}\r\n          buttonSubmitText={removePopupButtonText}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipPopup}\r\n          onClose={closeInfoTooltipPopup}\r\n          isLuck={isLuckInfoTooltip}\r\n        />\r\n\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}